import 'package:flutter/material.dart';

class RPSCustomPainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    Path path_0 = Path();
    path_0.moveTo(3.92053, 125.5);
    path_0.lineTo(392.329, 125.5);
    path_0.cubicTo(393.336, 125.5, 394.301, 125.105, 395.013, 124.401);
    path_0.cubicTo(395.725, 123.698, 396.125, 122.745, 396.125, 121.75);
    path_0.lineTo(396.125, 73);
    path_0.cubicTo(393.441, 73, 390.867, 71.9463, 388.969, 70.0709);
    path_0.cubicTo(387.071, 68.1956, 386.004, 65.6522, 386.004, 63);
    path_0.cubicTo(386.004, 60.3478, 387.071, 57.8044, 388.969, 55.9291);
    path_0.cubicTo(390.867, 54.0537, 393.441, 53, 396.125, 53);
    path_0.lineTo(396.125, 4.25);
    path_0.cubicTo(396.125, 3.25544, 395.725, 2.30189, 395.013, 1.59863);
    path_0.cubicTo(394.301, 0.895371, 393.336, 0.5, 392.329, 0.5);
    path_0.lineTo(117.448, 0.5);
    path_0.cubicTo(117.669, 0.880099, 117.784, 1.31086, 117.784, 1.74939);
    path_0.cubicTo(117.783, 2.18792, 117.668, 2.61855, 117.445, 2.99817);
    path_0.cubicTo(117.223, 3.37779, 116.903, 3.69335, 116.519, 3.91248);
    path_0.cubicTo(116.134, 4.1316, 115.697, 4.24695, 115.254, 4.24695);
    path_0.cubicTo(114.81, 4.24695, 114.375, 4.1316, 113.991, 3.91248);
    path_0.cubicTo(113.606, 3.69335, 113.286, 3.37779, 113.064, 2.99817);
    path_0.cubicTo(112.842, 2.61855, 112.724, 2.18792, 112.723, 1.74939);
    path_0.cubicTo(112.723, 1.31086, 112.84, 0.880099, 113.062, 0.5);
    path_0.lineTo(3.92053, 0.5);
    path_0.cubicTo(2.91391, 0.5, 1.94876, 0.895371, 1.23697, 1.59863);
    path_0.cubicTo(0.525177, 2.30189, 0.125, 3.25544, 0.125, 4.25);
    path_0.lineTo(0.125, 53);
    path_0.cubicTo(2.80936, 53, 5.38303, 54.0537, 7.28116, 55.9291);
    path_0.cubicTo(9.17929, 57.8044, 10.2464, 60.3478, 10.2464, 63);
    path_0.cubicTo(10.2464, 65.6522, 9.17929, 68.1956, 7.28116, 70.0709);
    path_0.cubicTo(5.38303, 71.9463, 2.80936, 73, 0.125, 73);
    path_0.lineTo(0.125, 121.75);
    path_0.cubicTo(0.125, 122.745, 0.525177, 123.698, 1.23697, 124.401);
    path_0.cubicTo(1.94876, 125.105, 2.91391, 125.5, 3.92053, 125.5);
    path_0.close();
    path_0.moveTo(115.256, 119.25);
    path_0.cubicTo(115.756, 119.25, 116.246, 119.396, 116.662, 119.671);
    path_0.cubicTo(117.078, 119.946, 117.402, 120.337, 117.594, 120.794);
    path_0.cubicTo(117.785, 121.25, 117.835, 121.753, 117.737, 122.238);
    path_0.cubicTo(117.639, 122.723, 117.399, 123.168, 117.045, 123.518);
    path_0.cubicTo(116.691, 123.867, 116.241, 124.105, 115.75, 124.202);
    path_0.cubicTo(115.259, 124.298, 114.75, 124.249, 114.287, 124.06);
    path_0.cubicTo(113.825, 123.87, 113.431, 123.55, 113.153, 123.139);
    path_0.cubicTo(112.875, 122.728, 112.726, 122.244, 112.726, 121.75);
    path_0.cubicTo(112.726, 121.087, 112.992, 120.451, 113.467, 119.982);
    path_0.cubicTo(113.941, 119.514, 114.585, 119.25, 115.256, 119.25);
    path_0.close();
    path_0.moveTo(115.256, 109.25);
    path_0.cubicTo(115.756, 109.25, 116.246, 109.396, 116.662, 109.671);
    path_0.cubicTo(117.078, 109.946, 117.402, 110.337, 117.594, 110.794);
    path_0.cubicTo(117.785, 111.25, 117.835, 111.753, 117.737, 112.238);
    path_0.cubicTo(117.639, 112.723, 117.399, 113.168, 117.045, 113.518);
    path_0.cubicTo(116.691, 113.867, 116.241, 114.105, 115.75, 114.202);
    path_0.cubicTo(115.259, 114.298, 114.75, 114.249, 114.287, 114.06);
    path_0.cubicTo(113.825, 113.87, 113.431, 113.55, 113.153, 113.139);
    path_0.cubicTo(112.875, 112.728, 112.726, 112.244, 112.726, 111.75);
    path_0.cubicTo(112.726, 111.087, 112.992, 110.451, 113.467, 109.982);
    path_0.cubicTo(113.941, 109.514, 114.585, 109.25, 115.256, 109.25);
    path_0.close();
    path_0.moveTo(115.256, 99.25);
    path_0.cubicTo(115.756, 99.25, 116.246, 99.3964, 116.662, 99.6711);
    path_0.cubicTo(117.078, 99.9458, 117.402, 100.337, 117.594, 100.794);
    path_0.cubicTo(117.785, 101.25, 117.835, 101.753, 117.737, 102.238);
    path_0.cubicTo(117.639, 102.723, 117.399, 103.168, 117.045, 103.518);
    path_0.cubicTo(116.691, 103.867, 116.241, 104.105, 115.75, 104.202);
    path_0.cubicTo(115.259, 104.298, 114.75, 104.249, 114.287, 104.06);
    path_0.cubicTo(113.825, 103.87, 113.431, 103.55, 113.153, 103.139);
    path_0.cubicTo(112.875, 102.728, 112.726, 102.244, 112.726, 101.75);
    path_0.cubicTo(112.726, 101.087, 112.992, 100.451, 113.467, 99.9824);
    path_0.cubicTo(113.941, 99.5136, 114.585, 99.25, 115.256, 99.25);
    path_0.close();
    path_0.moveTo(115.256, 89.25);
    path_0.cubicTo(115.756, 89.25, 116.246, 89.3964, 116.662, 89.6711);
    path_0.cubicTo(117.078, 89.9458, 117.402, 90.3368, 117.594, 90.7936);
    path_0.cubicTo(117.785, 91.2504, 117.835, 91.7527, 117.737, 92.2377);
    path_0.cubicTo(117.639, 92.7226, 117.399, 93.1679, 117.045, 93.5176);
    path_0.cubicTo(116.691, 93.8672, 116.241, 94.1053, 115.75, 94.2018);
    path_0.cubicTo(115.259, 94.2982, 114.75, 94.2488, 114.287, 94.0596);
    path_0.cubicTo(113.825, 93.8704, 113.431, 93.5503, 113.153, 93.1392);
    path_0.cubicTo(112.875, 92.728, 112.726, 92.2445, 112.726, 91.75);
    path_0.cubicTo(112.726, 91.087, 112.992, 90.4513, 113.467, 89.9824);
    path_0.cubicTo(113.941, 89.5136, 114.585, 89.25, 115.256, 89.25);
    path_0.close();
    path_0.moveTo(115.256, 79.25);
    path_0.cubicTo(115.756, 79.25, 116.246, 79.3964, 116.662, 79.6711);
    path_0.cubicTo(117.078, 79.9458, 117.402, 80.3368, 117.594, 80.7936);
    path_0.cubicTo(117.785, 81.2504, 117.835, 81.7527, 117.737, 82.2377);
    path_0.cubicTo(117.639, 82.7226, 117.399, 83.1679, 117.045, 83.5176);
    path_0.cubicTo(116.691, 83.8672, 116.241, 84.1053, 115.75, 84.2018);
    path_0.cubicTo(115.259, 84.2982, 114.75, 84.2488, 114.287, 84.0596);
    path_0.cubicTo(113.825, 83.8704, 113.431, 83.5503, 113.153, 83.1392);
    path_0.cubicTo(112.875, 82.728, 112.726, 82.2445, 112.726, 81.75);
    path_0.cubicTo(112.726, 81.087, 112.992, 80.4513, 113.467, 79.9824);
    path_0.cubicTo(113.941, 79.5136, 114.585, 79.25, 115.256, 79.25);
    path_0.close();
    path_0.moveTo(115.256, 69.25);
    path_0.cubicTo(115.756, 69.25, 116.246, 69.3964, 116.662, 69.6711);
    path_0.cubicTo(117.078, 69.9458, 117.402, 70.3368, 117.594, 70.7936);
    path_0.cubicTo(117.785, 71.2504, 117.835, 71.7527, 117.737, 72.2377);
    path_0.cubicTo(117.639, 72.7226, 117.399, 73.1679, 117.045, 73.5176);
    path_0.cubicTo(116.691, 73.8672, 116.241, 74.1053, 115.75, 74.2018);
    path_0.cubicTo(115.259, 74.2982, 114.75, 74.2488, 114.287, 74.0596);
    path_0.cubicTo(113.825, 73.8704, 113.431, 73.5503, 113.153, 73.1392);
    path_0.cubicTo(112.875, 72.728, 112.726, 72.2445, 112.726, 71.75);
    path_0.cubicTo(112.726, 71.087, 112.992, 70.4513, 113.467, 69.9824);
    path_0.cubicTo(113.941, 69.5136, 114.585, 69.25, 115.256, 69.25);
    path_0.close();
    path_0.moveTo(115.256, 59.25);
    path_0.cubicTo(115.756, 59.25, 116.246, 59.3964, 116.662, 59.6711);
    path_0.cubicTo(117.078, 59.9458, 117.402, 60.3368, 117.594, 60.7936);
    path_0.cubicTo(117.785, 61.2504, 117.835, 61.7527, 117.737, 62.2377);
    path_0.cubicTo(117.639, 62.7226, 117.399, 63.1679, 117.045, 63.5176);
    path_0.cubicTo(116.691, 63.8672, 116.241, 64.1053, 115.75, 64.2018);
    path_0.cubicTo(115.259, 64.2982, 114.75, 64.2488, 114.287, 64.0596);
    path_0.cubicTo(113.825, 63.8703, 113.431, 63.5503, 113.153, 63.1392);
    path_0.cubicTo(112.875, 62.728, 112.726, 62.2445, 112.726, 61.75);
    path_0.cubicTo(112.726, 61.087, 112.992, 60.4513, 113.467, 59.9824);
    path_0.cubicTo(113.941, 59.5136, 114.585, 59.25, 115.256, 59.25);
    path_0.close();
    path_0.moveTo(115.256, 49.25);
    path_0.cubicTo(115.756, 49.25, 116.246, 49.3964, 116.662, 49.6711);
    path_0.cubicTo(117.078, 49.9458, 117.402, 50.3368, 117.594, 50.7936);
    path_0.cubicTo(117.785, 51.2504, 117.835, 51.7527, 117.737, 52.2377);
    path_0.cubicTo(117.639, 52.7226, 117.399, 53.1679, 117.045, 53.5176);
    path_0.cubicTo(116.691, 53.8672, 116.241, 54.1053, 115.75, 54.2018);
    path_0.cubicTo(115.259, 54.2982, 114.75, 54.2488, 114.287, 54.0596);
    path_0.cubicTo(113.825, 53.8703, 113.431, 53.5503, 113.153, 53.1392);
    path_0.cubicTo(112.875, 52.728, 112.726, 52.2445, 112.726, 51.75);
    path_0.cubicTo(112.726, 51.087, 112.992, 50.4513, 113.467, 49.9824);
    path_0.cubicTo(113.941, 49.5136, 114.585, 49.25, 115.256, 49.25);
    path_0.close();
    path_0.moveTo(115.256, 39.25);
    path_0.cubicTo(115.756, 39.25, 116.246, 39.3964, 116.662, 39.6711);
    path_0.cubicTo(117.078, 39.9458, 117.402, 40.3368, 117.594, 40.7936);
    path_0.cubicTo(117.785, 41.2504, 117.835, 41.7527, 117.737, 42.2377);
    path_0.cubicTo(117.639, 42.7226, 117.399, 43.1679, 117.045, 43.5176);
    path_0.cubicTo(116.691, 43.8672, 116.241, 44.1053, 115.75, 44.2018);
    path_0.cubicTo(115.259, 44.2982, 114.75, 44.2488, 114.287, 44.0596);
    path_0.cubicTo(113.825, 43.8703, 113.431, 43.5503, 113.153, 43.1392);
    path_0.cubicTo(112.875, 42.728, 112.726, 42.2445, 112.726, 41.75);
    path_0.cubicTo(112.726, 41.087, 112.992, 40.4513, 113.467, 39.9824);
    path_0.cubicTo(113.941, 39.5136, 114.585, 39.25, 115.256, 39.25);
    path_0.close();
    path_0.moveTo(115.256, 29.25);
    path_0.cubicTo(115.756, 29.25, 116.246, 29.3964, 116.662, 29.6711);
    path_0.cubicTo(117.078, 29.9458, 117.402, 30.3368, 117.594, 30.7936);
    path_0.cubicTo(117.785, 31.2504, 117.835, 31.7527, 117.737, 32.2377);
    path_0.cubicTo(117.639, 32.7226, 117.399, 33.1679, 117.045, 33.5176);
    path_0.cubicTo(116.691, 33.8672, 116.241, 34.1053, 115.75, 34.2018);
    path_0.cubicTo(115.259, 34.2982, 114.75, 34.2488, 114.287, 34.0596);
    path_0.cubicTo(113.825, 33.8703, 113.431, 33.5503, 113.153, 33.1392);
    path_0.cubicTo(112.875, 32.728, 112.726, 32.2445, 112.726, 31.75);
    path_0.cubicTo(112.726, 31.087, 112.992, 30.4513, 113.467, 29.9824);
    path_0.cubicTo(113.941, 29.5136, 114.585, 29.25, 115.256, 29.25);
    path_0.close();
    path_0.moveTo(115.256, 19.25);
    path_0.cubicTo(115.756, 19.25, 116.246, 19.3964, 116.662, 19.6711);
    path_0.cubicTo(117.078, 19.9458, 117.402, 20.3368, 117.594, 20.7936);
    path_0.cubicTo(117.785, 21.2504, 117.835, 21.7527, 117.737, 22.2377);
    path_0.cubicTo(117.639, 22.7226, 117.399, 23.1679, 117.045, 23.5176);
    path_0.cubicTo(116.691, 23.8672, 116.241, 24.1053, 115.75, 24.2018);
    path_0.cubicTo(115.259, 24.2982, 114.75, 24.2488, 114.287, 24.0596);
    path_0.cubicTo(113.825, 23.8704, 113.431, 23.5503, 113.153, 23.1392);
    path_0.cubicTo(112.875, 22.728, 112.726, 22.2445, 112.726, 21.75);
    path_0.cubicTo(112.726, 21.087, 112.992, 20.4513, 113.467, 19.9824);
    path_0.cubicTo(113.941, 19.5136, 114.585, 19.25, 115.256, 19.25);
    path_0.close();
    path_0.moveTo(115.256, 9.25);
    path_0.cubicTo(115.756, 9.25, 116.246, 9.39644, 116.662, 9.67114);
    path_0.cubicTo(117.078, 9.94585, 117.402, 10.3368, 117.594, 10.7936);
    path_0.cubicTo(117.785, 11.2504, 117.835, 11.7527, 117.737, 12.2377);
    path_0.cubicTo(117.639, 12.7226, 117.399, 13.1679, 117.045, 13.5176);
    path_0.cubicTo(116.691, 13.8672, 116.241, 14.1053, 115.75, 14.2018);
    path_0.cubicTo(115.259, 14.2982, 114.75, 14.2488, 114.287, 14.0596);
    path_0.cubicTo(113.825, 13.8704, 113.431, 13.5503, 113.153, 13.1392);
    path_0.cubicTo(112.875, 12.728, 112.726, 12.2445, 112.726, 11.75);
    path_0.cubicTo(112.726, 11.087, 112.992, 10.4513, 113.467, 9.98242);
    path_0.cubicTo(113.941, 9.51358, 114.585, 9.25, 115.256, 9.25);
    path_0.close();

    Paint paint_0_fill = Paint()..style = PaintingStyle.fill;
    paint_0_fill.color = Color(0xff000000).withOpacity(1.0);
    canvas.drawPath(path_0, paint_0_fill);

    Path path_1 = Path();
    path_1.moveTo(3.92053, 125.5);
    path_1.lineTo(392.329, 125.5);
    path_1.cubicTo(393.336, 125.5, 394.301, 125.105, 395.013, 124.401);
    path_1.cubicTo(395.725, 123.698, 396.125, 122.745, 396.125, 121.75);
    path_1.lineTo(396.125, 73);
    path_1.cubicTo(393.441, 73, 390.867, 71.9463, 388.969, 70.0709);
    path_1.cubicTo(387.071, 68.1956, 386.004, 65.6522, 386.004, 63);
    path_1.cubicTo(386.004, 60.3478, 387.071, 57.8044, 388.969, 55.9291);
    path_1.cubicTo(390.867, 54.0537, 393.441, 53, 396.125, 53);
    path_1.lineTo(396.125, 4.25);
    path_1.cubicTo(396.125, 3.25544, 395.725, 2.30189, 395.013, 1.59863);
    path_1.cubicTo(394.301, 0.895371, 393.336, 0.5, 392.329, 0.5);
    path_1.lineTo(117.448, 0.5);
    path_1.cubicTo(117.669, 0.880099, 117.784, 1.31086, 117.784, 1.74939);
    path_1.cubicTo(117.783, 2.18792, 117.668, 2.61855, 117.445, 2.99817);
    path_1.cubicTo(117.223, 3.37779, 116.903, 3.69335, 116.519, 3.91248);
    path_1.cubicTo(116.134, 4.1316, 115.697, 4.24695, 115.254, 4.24695);
    path_1.cubicTo(114.81, 4.24695, 114.375, 4.1316, 113.991, 3.91248);
    path_1.cubicTo(113.606, 3.69335, 113.286, 3.37779, 113.064, 2.99817);
    path_1.cubicTo(112.842, 2.61855, 112.724, 2.18792, 112.723, 1.74939);
    path_1.cubicTo(112.723, 1.31086, 112.84, 0.880099, 113.062, 0.5);
    path_1.lineTo(3.92053, 0.5);
    path_1.cubicTo(2.91391, 0.5, 1.94876, 0.895371, 1.23697, 1.59863);
    path_1.cubicTo(0.525177, 2.30189, 0.125, 3.25544, 0.125, 4.25);
    path_1.lineTo(0.125, 53);
    path_1.cubicTo(2.80936, 53, 5.38303, 54.0537, 7.28116, 55.9291);
    path_1.cubicTo(9.17929, 57.8044, 10.2464, 60.3478, 10.2464, 63);
    path_1.cubicTo(10.2464, 65.6522, 9.17929, 68.1956, 7.28116, 70.0709);
    path_1.cubicTo(5.38303, 71.9463, 2.80936, 73, 0.125, 73);
    path_1.lineTo(0.125, 121.75);
    path_1.cubicTo(0.125, 122.745, 0.525177, 123.698, 1.23697, 124.401);
    path_1.cubicTo(1.94876, 125.105, 2.91391, 125.5, 3.92053, 125.5);
    path_1.close();
    path_1.moveTo(115.256, 119.25);
    path_1.cubicTo(115.756, 119.25, 116.246, 119.396, 116.662, 119.671);
    path_1.cubicTo(117.078, 119.946, 117.402, 120.337, 117.594, 120.794);
    path_1.cubicTo(117.785, 121.25, 117.835, 121.753, 117.737, 122.238);
    path_1.cubicTo(117.639, 122.723, 117.399, 123.168, 117.045, 123.518);
    path_1.cubicTo(116.691, 123.867, 116.241, 124.105, 115.75, 124.202);
    path_1.cubicTo(115.259, 124.298, 114.75, 124.249, 114.287, 124.06);
    path_1.cubicTo(113.825, 123.87, 113.431, 123.55, 113.153, 123.139);
    path_1.cubicTo(112.875, 122.728, 112.726, 122.244, 112.726, 121.75);
    path_1.cubicTo(112.726, 121.087, 112.992, 120.451, 113.467, 119.982);
    path_1.cubicTo(113.941, 119.514, 114.585, 119.25, 115.256, 119.25);
    path_1.close();
    path_1.moveTo(115.256, 109.25);
    path_1.cubicTo(115.756, 109.25, 116.246, 109.396, 116.662, 109.671);
    path_1.cubicTo(117.078, 109.946, 117.402, 110.337, 117.594, 110.794);
    path_1.cubicTo(117.785, 111.25, 117.835, 111.753, 117.737, 112.238);
    path_1.cubicTo(117.639, 112.723, 117.399, 113.168, 117.045, 113.518);
    path_1.cubicTo(116.691, 113.867, 116.241, 114.105, 115.75, 114.202);
    path_1.cubicTo(115.259, 114.298, 114.75, 114.249, 114.287, 114.06);
    path_1.cubicTo(113.825, 113.87, 113.431, 113.55, 113.153, 113.139);
    path_1.cubicTo(112.875, 112.728, 112.726, 112.244, 112.726, 111.75);
    path_1.cubicTo(112.726, 111.087, 112.992, 110.451, 113.467, 109.982);
    path_1.cubicTo(113.941, 109.514, 114.585, 109.25, 115.256, 109.25);
    path_1.close();
    path_1.moveTo(115.256, 99.25);
    path_1.cubicTo(115.756, 99.25, 116.246, 99.3964, 116.662, 99.6711);
    path_1.cubicTo(117.078, 99.9458, 117.402, 100.337, 117.594, 100.794);
    path_1.cubicTo(117.785, 101.25, 117.835, 101.753, 117.737, 102.238);
    path_1.cubicTo(117.639, 102.723, 117.399, 103.168, 117.045, 103.518);
    path_1.cubicTo(116.691, 103.867, 116.241, 104.105, 115.75, 104.202);
    path_1.cubicTo(115.259, 104.298, 114.75, 104.249, 114.287, 104.06);
    path_1.cubicTo(113.825, 103.87, 113.431, 103.55, 113.153, 103.139);
    path_1.cubicTo(112.875, 102.728, 112.726, 102.244, 112.726, 101.75);
    path_1.cubicTo(112.726, 101.087, 112.992, 100.451, 113.467, 99.9824);
    path_1.cubicTo(113.941, 99.5136, 114.585, 99.25, 115.256, 99.25);
    path_1.close();
    path_1.moveTo(115.256, 89.25);
    path_1.cubicTo(115.756, 89.25, 116.246, 89.3964, 116.662, 89.6711);
    path_1.cubicTo(117.078, 89.9458, 117.402, 90.3368, 117.594, 90.7936);
    path_1.cubicTo(117.785, 91.2504, 117.835, 91.7527, 117.737, 92.2377);
    path_1.cubicTo(117.639, 92.7226, 117.399, 93.1679, 117.045, 93.5176);
    path_1.cubicTo(116.691, 93.8672, 116.241, 94.1053, 115.75, 94.2018);
    path_1.cubicTo(115.259, 94.2982, 114.75, 94.2488, 114.287, 94.0596);
    path_1.cubicTo(113.825, 93.8704, 113.431, 93.5503, 113.153, 93.1392);
    path_1.cubicTo(112.875, 92.728, 112.726, 92.2445, 112.726, 91.75);
    path_1.cubicTo(112.726, 91.087, 112.992, 90.4513, 113.467, 89.9824);
    path_1.cubicTo(113.941, 89.5136, 114.585, 89.25, 115.256, 89.25);
    path_1.close();
    path_1.moveTo(115.256, 79.25);
    path_1.cubicTo(115.756, 79.25, 116.246, 79.3964, 116.662, 79.6711);
    path_1.cubicTo(117.078, 79.9458, 117.402, 80.3368, 117.594, 80.7936);
    path_1.cubicTo(117.785, 81.2504, 117.835, 81.7527, 117.737, 82.2377);
    path_1.cubicTo(117.639, 82.7226, 117.399, 83.1679, 117.045, 83.5176);
    path_1.cubicTo(116.691, 83.8672, 116.241, 84.1053, 115.75, 84.2018);
    path_1.cubicTo(115.259, 84.2982, 114.75, 84.2488, 114.287, 84.0596);
    path_1.cubicTo(113.825, 83.8704, 113.431, 83.5503, 113.153, 83.1392);
    path_1.cubicTo(112.875, 82.728, 112.726, 82.2445, 112.726, 81.75);
    path_1.cubicTo(112.726, 81.087, 112.992, 80.4513, 113.467, 79.9824);
    path_1.cubicTo(113.941, 79.5136, 114.585, 79.25, 115.256, 79.25);
    path_1.close();
    path_1.moveTo(115.256, 69.25);
    path_1.cubicTo(115.756, 69.25, 116.246, 69.3964, 116.662, 69.6711);
    path_1.cubicTo(117.078, 69.9458, 117.402, 70.3368, 117.594, 70.7936);
    path_1.cubicTo(117.785, 71.2504, 117.835, 71.7527, 117.737, 72.2377);
    path_1.cubicTo(117.639, 72.7226, 117.399, 73.1679, 117.045, 73.5176);
    path_1.cubicTo(116.691, 73.8672, 116.241, 74.1053, 115.75, 74.2018);
    path_1.cubicTo(115.259, 74.2982, 114.75, 74.2488, 114.287, 74.0596);
    path_1.cubicTo(113.825, 73.8704, 113.431, 73.5503, 113.153, 73.1392);
    path_1.cubicTo(112.875, 72.728, 112.726, 72.2445, 112.726, 71.75);
    path_1.cubicTo(112.726, 71.087, 112.992, 70.4513, 113.467, 69.9824);
    path_1.cubicTo(113.941, 69.5136, 114.585, 69.25, 115.256, 69.25);
    path_1.close();
    path_1.moveTo(115.256, 59.25);
    path_1.cubicTo(115.756, 59.25, 116.246, 59.3964, 116.662, 59.6711);
    path_1.cubicTo(117.078, 59.9458, 117.402, 60.3368, 117.594, 60.7936);
    path_1.cubicTo(117.785, 61.2504, 117.835, 61.7527, 117.737, 62.2377);
    path_1.cubicTo(117.639, 62.7226, 117.399, 63.1679, 117.045, 63.5176);
    path_1.cubicTo(116.691, 63.8672, 116.241, 64.1053, 115.75, 64.2018);
    path_1.cubicTo(115.259, 64.2982, 114.75, 64.2488, 114.287, 64.0596);
    path_1.cubicTo(113.825, 63.8703, 113.431, 63.5503, 113.153, 63.1392);
    path_1.cubicTo(112.875, 62.728, 112.726, 62.2445, 112.726, 61.75);
    path_1.cubicTo(112.726, 61.087, 112.992, 60.4513, 113.467, 59.9824);
    path_1.cubicTo(113.941, 59.5136, 114.585, 59.25, 115.256, 59.25);
    path_1.close();
    path_1.moveTo(115.256, 49.25);
    path_1.cubicTo(115.756, 49.25, 116.246, 49.3964, 116.662, 49.6711);
    path_1.cubicTo(117.078, 49.9458, 117.402, 50.3368, 117.594, 50.7936);
    path_1.cubicTo(117.785, 51.2504, 117.835, 51.7527, 117.737, 52.2377);
    path_1.cubicTo(117.639, 52.7226, 117.399, 53.1679, 117.045, 53.5176);
    path_1.cubicTo(116.691, 53.8672, 116.241, 54.1053, 115.75, 54.2018);
    path_1.cubicTo(115.259, 54.2982, 114.75, 54.2488, 114.287, 54.0596);
    path_1.cubicTo(113.825, 53.8703, 113.431, 53.5503, 113.153, 53.1392);
    path_1.cubicTo(112.875, 52.728, 112.726, 52.2445, 112.726, 51.75);
    path_1.cubicTo(112.726, 51.087, 112.992, 50.4513, 113.467, 49.9824);
    path_1.cubicTo(113.941, 49.5136, 114.585, 49.25, 115.256, 49.25);
    path_1.close();
    path_1.moveTo(115.256, 39.25);
    path_1.cubicTo(115.756, 39.25, 116.246, 39.3964, 116.662, 39.6711);
    path_1.cubicTo(117.078, 39.9458, 117.402, 40.3368, 117.594, 40.7936);
    path_1.cubicTo(117.785, 41.2504, 117.835, 41.7527, 117.737, 42.2377);
    path_1.cubicTo(117.639, 42.7226, 117.399, 43.1679, 117.045, 43.5176);
    path_1.cubicTo(116.691, 43.8672, 116.241, 44.1053, 115.75, 44.2018);
    path_1.cubicTo(115.259, 44.2982, 114.75, 44.2488, 114.287, 44.0596);
    path_1.cubicTo(113.825, 43.8703, 113.431, 43.5503, 113.153, 43.1392);
    path_1.cubicTo(112.875, 42.728, 112.726, 42.2445, 112.726, 41.75);
    path_1.cubicTo(112.726, 41.087, 112.992, 40.4513, 113.467, 39.9824);
    path_1.cubicTo(113.941, 39.5136, 114.585, 39.25, 115.256, 39.25);
    path_1.close();
    path_1.moveTo(115.256, 29.25);
    path_1.cubicTo(115.756, 29.25, 116.246, 29.3964, 116.662, 29.6711);
    path_1.cubicTo(117.078, 29.9458, 117.402, 30.3368, 117.594, 30.7936);
    path_1.cubicTo(117.785, 31.2504, 117.835, 31.7527, 117.737, 32.2377);
    path_1.cubicTo(117.639, 32.7226, 117.399, 33.1679, 117.045, 33.5176);
    path_1.cubicTo(116.691, 33.8672, 116.241, 34.1053, 115.75, 34.2018);
    path_1.cubicTo(115.259, 34.2982, 114.75, 34.2488, 114.287, 34.0596);
    path_1.cubicTo(113.825, 33.8703, 113.431, 33.5503, 113.153, 33.1392);
    path_1.cubicTo(112.875, 32.728, 112.726, 32.2445, 112.726, 31.75);
    path_1.cubicTo(112.726, 31.087, 112.992, 30.4513, 113.467, 29.9824);
    path_1.cubicTo(113.941, 29.5136, 114.585, 29.25, 115.256, 29.25);
    path_1.close();
    path_1.moveTo(115.256, 19.25);
    path_1.cubicTo(115.756, 19.25, 116.246, 19.3964, 116.662, 19.6711);
    path_1.cubicTo(117.078, 19.9458, 117.402, 20.3368, 117.594, 20.7936);
    path_1.cubicTo(117.785, 21.2504, 117.835, 21.7527, 117.737, 22.2377);
    path_1.cubicTo(117.639, 22.7226, 117.399, 23.1679, 117.045, 23.5176);
    path_1.cubicTo(116.691, 23.8672, 116.241, 24.1053, 115.75, 24.2018);
    path_1.cubicTo(115.259, 24.2982, 114.75, 24.2488, 114.287, 24.0596);
    path_1.cubicTo(113.825, 23.8704, 113.431, 23.5503, 113.153, 23.1392);
    path_1.cubicTo(112.875, 22.728, 112.726, 22.2445, 112.726, 21.75);
    path_1.cubicTo(112.726, 21.087, 112.992, 20.4513, 113.467, 19.9824);
    path_1.cubicTo(113.941, 19.5136, 114.585, 19.25, 115.256, 19.25);
    path_1.close();
    path_1.moveTo(115.256, 9.25);
    path_1.cubicTo(115.756, 9.25, 116.246, 9.39644, 116.662, 9.67114);
    path_1.cubicTo(117.078, 9.94585, 117.402, 10.3368, 117.594, 10.7936);
    path_1.cubicTo(117.785, 11.2504, 117.835, 11.7527, 117.737, 12.2377);
    path_1.cubicTo(117.639, 12.7226, 117.399, 13.1679, 117.045, 13.5176);
    path_1.cubicTo(116.691, 13.8672, 116.241, 14.1053, 115.75, 14.2018);
    path_1.cubicTo(115.259, 14.2982, 114.75, 14.2488, 114.287, 14.0596);
    path_1.cubicTo(113.825, 13.8704, 113.431, 13.5503, 113.153, 13.1392);
    path_1.cubicTo(112.875, 12.728, 112.726, 12.2445, 112.726, 11.75);
    path_1.cubicTo(112.726, 11.087, 112.992, 10.4513, 113.467, 9.98242);
    path_1.cubicTo(113.941, 9.51358, 114.585, 9.25, 115.256, 9.25);
    path_1.close();

    Paint paint_1_stroke = Paint()
      ..style = PaintingStyle.stroke
      ..strokeWidth = size.width * 0.001259446;
    paint_1_stroke.color = Color(0xffF1C111).withOpacity(1.0);
    canvas.drawPath(path_1, paint_1_stroke);

    Paint paint_1_fill = Paint()..style = PaintingStyle.fill;
    paint_1_fill.color = Colors.white.withOpacity(1.0);
    canvas.drawPath(path_1, paint_1_fill);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return true;
  }
}
